/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI.Kho_PN_PX;

import BLL.ExecuteData;
import BLL.GetData;
import DTO.ChiTietHoaDon;
import DTO.KhuyenMai;
import DTO.NhanVien;
import DTO.PhieuNhap;
import DTO.PhieuXuat;
import Ultilities.ConvertData.ConvertDataORCL;
import Ultilities.swing.Controls.ButtonColumn;
import java.awt.event.ActionEvent;
import java.math.BigDecimal;
import java.sql.Blob;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author HieuThao
 */
public class PhieuNhap_Xuat extends javax.swing.JFrame {

    /**
     * Creates new form PhieuNhap_Xuat
     */
    public PhieuNhap_Xuat() {
        initComponents();
    }
    GetData getdata = new GetData();
    boolean xuat_nhap = true;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        dcs_ngaylap = new com.toedter.calendar.JDateChooser();
        cbo_nv = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        rdo_nhap = new javax.swing.JRadioButton();
        rdo_xuat = new javax.swing.JRadioButton();
        btn_Them = new Ultilities.swing.Controls.ButtonGradient();
        textField2 = new Ultilities.swing.Controls.TextField();
        buttonGradient2 = new Ultilities.swing.Controls.ButtonGradient();
        btn_sua = new Ultilities.swing.Controls.ButtonGradient();
        btn_Xoa = new Ultilities.swing.Controls.ButtonGradient();
        jScrollPane2 = new javax.swing.JScrollPane();
        table_pn_px = new Ultilities.swing.Controls.Table();
        jScrollPane3 = new javax.swing.JScrollPane();
        table_cttpn_px = new Ultilities.swing.Controls.Table();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1100, 660));
        setPreferredSize(new java.awt.Dimension(1100, 660));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMinimumSize(new java.awt.Dimension(1100, 660));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin phiếu", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18))); // NOI18N
        jPanel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Ngày lập ");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Mã nhân viên");

        dcs_ngaylap.setDateFormatString("yyyy-MM-dd HH:mm:ss");
        dcs_ngaylap.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        dcs_ngaylap.setName("dcs_nl"); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dcs_ngaylap, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbo_nv, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(245, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(dcs_ngaylap, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(cbo_nv, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 70, 740, 150));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chọn chức năng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18))); // NOI18N

        rdo_nhap.setBackground(new java.awt.Color(255, 255, 255));
        rdo_nhap.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rdo_nhap.setText("Nhập kho");
        rdo_nhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdo_nhapActionPerformed(evt);
            }
        });

        rdo_xuat.setBackground(new java.awt.Color(255, 255, 255));
        rdo_xuat.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        rdo_xuat.setText("Xuất kho");
        rdo_xuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdo_xuatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(rdo_nhap)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(rdo_xuat)
                .addGap(31, 31, 31))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdo_xuat)
                    .addComponent(rdo_nhap))
                .addGap(43, 43, 43))
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 290, 150));

        btn_Them.setText("Thêm");
        btn_Them.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_ThemMouseClicked(evt);
            }
        });
        jPanel1.add(btn_Them, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 590, 101, -1));

        textField2.setText("textField2");
        jPanel1.add(textField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(636, 17, 306, -1));

        buttonGradient2.setText("Tìm kiếm");
        jPanel1.add(buttonGradient2, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 20, 100, -1));

        btn_sua.setText("Sửa");
        btn_sua.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_suaMouseClicked(evt);
            }
        });
        jPanel1.add(btn_sua, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 590, 101, -1));

        btn_Xoa.setText("Xóa");
        btn_Xoa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_XoaMouseClicked(evt);
            }
        });
        jPanel1.add(btn_Xoa, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 590, 101, -1));

        table_pn_px.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        table_pn_px.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_pn_pxMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(table_pn_px);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 250, 460, 320));

        table_cttpn_px.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(table_cttpn_px);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 250, 550, 320));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1100, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 660, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    void loadtable() {
           if (xuat_nhap) {
               loadPhieuNhap();

           } else {
               loadPhieuXuat();
           }
       }
    private void rdo_nhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdo_nhapActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_rdo_nhapActionPerformed

    private void rdo_xuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdo_xuatActionPerformed
        // TODO add your handling code here:
       
            xuat_nhap = false;
            loadPhieuXuat();
    }//GEN-LAST:event_rdo_xuatActionPerformed

    private void btn_ThemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_ThemMouseClicked
        // TODO add your handling code here:
        Date currentDate = new Date();
        // Định dạng ngày giờ với SimpleDateFormat
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");

        String formattedDate = dateFormat.format(currentDate);
        Date cd = new Date();
        try {
            cd = dateFormat.parse(formattedDate);
        } catch (ParseException ex) {
            Logger.getLogger(Fr_phieuNhap1.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(dcs_ngaylap.getDate().compareTo(cd) >0)
        {
            JOptionPane.showMessageDialog(this, "Ngày nhập không được lớn hơn ngày hiện tại");
        }
        else
        {
            if(xuat_nhap)
            {
                PhieuNhap pn = new PhieuNhap();
                NhanVien t = (NhanVien) cbo_nv.getSelectedItem();
                pn.setManv(t.getManv());
                Calendar calendar = Calendar.getInstance();
                calendar.setTime(dcs_ngaylap.getDate());
                SimpleDateFormat dateFormat1 = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                String ngay = dateFormat1.format(calendar.getTime());
                pn.setNgaylap(ngay);

                if(ExecuteData.insertPN(pn))
                {
                    JOptionPane.showMessageDialog(this, "Thêm thành công");
                    loadtable();
                }
                else
                {
                    JOptionPane.showMessageDialog(this, "Thêm thất bại");
                }
            }
            else
            {
                PhieuXuat px = new PhieuXuat();
                NhanVien t = (NhanVien) cbo_nv.getSelectedItem();
                px.setManv(t.getManv());
                px.setNgaylap(dcs_ngaylap.getDateFormatString());

                if(ExecuteData.insertPX(px))
                {
                    JOptionPane.showMessageDialog(this, "Thêm thành công");
                    loadtable();
                }
                else
                {
                    JOptionPane.showMessageDialog(this, "Thêm thất bại");
                }
            }

        }
    }//GEN-LAST:event_btn_ThemMouseClicked

    private void btn_suaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_suaMouseClicked
        // TODO add your handling code here:
        Date currentDate = new Date();
        // Định dạng ngày giờ với SimpleDateFormat
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");

        String formattedDate = dateFormat.format(currentDate);
        Date cd = new Date();
        try {
            cd = dateFormat.parse(formattedDate);
        } catch (ParseException ex) {
            Logger.getLogger(Fr_phieuNhap1.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(dcs_ngaylap.getDate().compareTo(cd) >0)
        {
            JOptionPane.showMessageDialog(this, "Ngày nhập không được lớn hơn ngày hiện tại");
        }
        else
        {
            int row = table_pn_px.getSelectedRow();
            if(row ==-1)
            {
                JOptionPane.showMessageDialog(this, "Bạn chưa chọn dòng cập nhật");
                return;
            }
            if(xuat_nhap)
            {

                PhieuNhap pn = new PhieuNhap();
                NhanVien t = (NhanVien) cbo_nv.getSelectedItem();
                pn.setManv(t.getManv());
                Calendar calendar = Calendar.getInstance();
                calendar.setTime(dcs_ngaylap.getDate());
                SimpleDateFormat dateFormat1 = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                String ngay = dateFormat1.format(calendar.getTime());
                pn.setNgaylap(ngay);
                pn.setMapn(table_pn_px.getValueAt(row, 0).toString());
                if(ExecuteData.updatePN(pn))
                {
                    JOptionPane.showMessageDialog(this, "Sửa thành công");
                    loadtable();
                }
                else
                {
                    JOptionPane.showMessageDialog(this, "Sửa thất bại");
                }
            }
            else
            {

                PhieuXuat px = new PhieuXuat();
                NhanVien t = (NhanVien) cbo_nv.getSelectedItem();
                px.setManv(t.getManv());
                px.setNgaylap(dcs_ngaylap.getDateFormatString());
                px.setMapx(table_pn_px.getValueAt(row, 0).toString());
                if(ExecuteData.updatePX(px))
                {
                    JOptionPane.showMessageDialog(this, "Sửa thành công");
                    loadtable();
                }
                else
                {
                    JOptionPane.showMessageDialog(this, "Sửa thất bại");
                }
            }
        }

    }//GEN-LAST:event_btn_suaMouseClicked

    private void btn_XoaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_XoaMouseClicked
        // TODO add your handling code here:
        int row = table_pn_px.getSelectedRow();
        if(row ==-1)
        {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn dòng cập nhật");
            return;
        }
        if(xuat_nhap)
        {

            PhieuNhap pn = new PhieuNhap();
            pn.setMapn(table_pn_px.getValueAt(row, 0).toString());
            if(ExecuteData.deletePN(pn))
            {
                JOptionPane.showMessageDialog(this, "Xóa thành công");
                loadtable();
            }
            else
            {
                JOptionPane.showMessageDialog(this, "Xóa thất bại");
            }
        }else
        {

            PhieuXuat px = new PhieuXuat();
            px.setMapx(table_pn_px.getValueAt(row, 0).toString());
            if(ExecuteData.deletePX(px))
            {
                JOptionPane.showMessageDialog(this, "Xóa thành công");
                loadtable();
            }
            else
            {
                JOptionPane.showMessageDialog(this, "Xóa thất bại");
            }
        }

    }//GEN-LAST:event_btn_XoaMouseClicked

    private void table_pn_pxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_pn_pxMouseClicked
        // TODO add your handling code here:
        int row = table_pn_px.getSelectedRow();
        if (xuat_nhap) {
            loadCTPhieuNhap(table_pn_px.getValueAt(row, 0).toString());
        } else {
            loadCTPhieuXuat(table_pn_px.getValueAt(row, 0).toString());
        }
        NhanVien t = new NhanVien();
        for(int i = 0 ; i < cbo_nv.getItemCount();i++)
        {
            t = (NhanVien) cbo_nv.getItemAt(i);
            if(t.getTennv().equals(table_pn_px.getValueAt(row, 2).toString()))
            {
                cbo_nv.setSelectedIndex(i);
                break;
            }
        }
        Date date = new Date();
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        String dateStr =table_pn_px.getValueAt(row, 1).toString();
        try {
            dcs_ngaylap.setDate(dateFormat.parse(dateStr));
        } catch (ParseException ex) {
            Logger.getLogger(Fr_phieuNhap1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_table_pn_pxMouseClicked

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Ultilities.swing.Controls.ButtonGradient btn_Them;
    private Ultilities.swing.Controls.ButtonGradient btn_Xoa;
    private Ultilities.swing.Controls.ButtonGradient btn_sua;
    private Ultilities.swing.Controls.ButtonGradient buttonGradient2;
    private javax.swing.JComboBox<NhanVien> cbo_nv;
    private com.toedter.calendar.JDateChooser dcs_ngaylap;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JRadioButton rdo_nhap;
    private javax.swing.JRadioButton rdo_xuat;
    private Ultilities.swing.Controls.Table table_cttpn_px;
    private Ultilities.swing.Controls.Table table_pn_px;
    private Ultilities.swing.Controls.TextField textField2;
    // End of variables declaration//GEN-END:variables
    void loadPhieuNhap() {
        String[] columnNames = {"Mã Phiếu nhập", "Ngày nhập", "Nhân viên"};
         table_pn_px.setModel(new DefaultTableModel(new Object[][]{}, columnNames) {
            Class[] columTypes = new Class[]{
                Object.class, Object.class, Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return columTypes[columnIndex];
            }
        });
        DefaultTableModel model = (DefaultTableModel) table_pn_px.getModel();
        model.addColumn(" ");
        ButtonColumn btnCol = new ButtonColumn(table_pn_px, clickMon, columnNames.length, "Xem chi tiết");        
        Object[][] info1 =(Object[][]) getdata.getDataPhieuNhap();
        for (Object[] innerList : info1) {
            PhieuNhap pn = new PhieuNhap();
            if (innerList[2] instanceof String) {
                pn.setManv(((String) innerList[2]));
            }
            if (innerList[0] instanceof String) {
                pn.setMapn((String) innerList[0]);
            }
            if (innerList[1] instanceof String) {
                 pn.setNgaylap((String) innerList[1]);
            }
            Object[] obj = {pn.getMapn(), pn.getNgaylap(), pn.getManv()};
            model.addRow(obj);
        }
    }
    Action clickMon = new AbstractAction() {
        public void actionPerformed(ActionEvent e) {
            if(xuat_nhap)
            {
                Fr_phieuNhap2 r = new Fr_phieuNhap2();
                
            }
            else
            {
                Fr_phieuXuat2 r = new Fr_phieuXuat2();
            }
                       
         }   
            
    };
    void loadPhieuXuat() {
        table_pn_px.setModel(null);
        String[] columnNames = {"Mã Phiếu xuất", "Ngày xuất", "Nhân viên"};
        table_pn_px.setModel(new DefaultTableModel(new Object[][]{}, columnNames) {
            Class[] columTypes = new Class[]{
                Object.class, Object.class, Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return columTypes[columnIndex];
            }
        });
        DefaultTableModel model = (DefaultTableModel) table_pn_px.getModel();
        model.addColumn("");
        ButtonColumn btnCol = new ButtonColumn(table_pn_px, clickMon, columnNames.length, "Xem chi tiết");        
        Object[][] info1 =(Object[][]) getdata.getDataPhieuXuat();
        for (Object[] innerList : info1) {
            PhieuXuat px = new PhieuXuat();
            if (innerList[2] instanceof String) {
                px.setManv(((String) innerList[2]));
            }
            if (innerList[0] instanceof String) {
                px.setMapx((String) innerList[0]);
            }
            if (innerList[1] instanceof String) {
                 px.setNgaylap((String) innerList[1]);
            }
            Object[] obj = {px.getMapx(), px.getNgaylap(), px.getManv()};
            model.addRow(obj);
        }
    }

    void loadCTPhieuXuat(String ma) {
       DefaultTableModel model = (DefaultTableModel) table_cttpn_px.getModel();
        String[] tenCot = {"Mã Phiếu xuất", "Ngày xuất", "Nhân viên"};
        model.setDataVector(getdata.getDataCTPhieuXuat(ma), tenCot);
    }
   
    void loadCTPhieuNhap(String ma) {
        DefaultTableModel model = (DefaultTableModel) table_cttpn_px.getModel();
        String[] tenCot = {"Mã Phiếu nhập", "Ngày nhập", "Nhân viên"};
        model.setDataVector(getdata.getDataCTPhieuNhap(ma), tenCot);
    }
    DefaultComboBoxModel<NhanVien> model_cbo_nv ;
    void loadcomboNV()
    {
        // Khởi tạo một danh sách các chuỗi
        Object[][] info1 = (Object[][])getdata.getDataNhanVien().get(1);
        model_cbo_nv = new DefaultComboBoxModel<>();
        for (Object[] innerList : info1) {
            NhanVien nv = new NhanVien();
            if (innerList[0] instanceof String) {
                nv.setManv((String) innerList[0]);

            }
            if (innerList[1] instanceof String) {
                nv.setTennv((String) innerList[1]);
            }
            model_cbo_nv.addElement(nv);
        }
        cbo_nv.setModel(model_cbo_nv);
    }
}
